import org.junit.jupiter.api.Test
import org.junit.jupiter.api.extension.ExtendWith
import org.mockito.InjectMocks
import org.mockito.Mock
import org.mockito.junit.jupiter.MockitoExtension
import org.springframework.http.HttpStatus
import org.springframework.http.ResponseEntity
import reactor.core.publisher.Mono
import reactor.test.StepVerifier

@ExtendWith(MockitoExtension::class)
class PromoDefAdminControllerTest {

    @Mock
    lateinit var promoService: PromoService // Mocking the PromoService

    @InjectMocks
    lateinit var promoDefAdminController: PromoDefAdminController // Injecting Mocks

    @Test
    fun `test updatePromoDef`() {
        // Mocking the behavior of the promoService
        val rowsUpdated = 5 // Replace with the expected value
        Mockito.`when`(promoService.updatePromo(any())).thenReturn(Mono.just(rowsUpdated))

        // Create a request body for testing
        val promoDefAdminRequest = PromoDefAdminRequest(/* fill with required data */)

        // Call the controller method
        val response = promoDefAdminController.updatePromoDef(promoDefAdminRequest)

        // Verify the response
        StepVerifier.create(response?.body ?: Mono.empty())
            .expectNext(ResponseEntity(rowsUpdated, HttpStatus.OK))
            .verifyComplete()
    }
}
